import React, { useState,useEffect } from 'react'
import Head from 'next/head'
import Link from 'next/link'
import axios from 'axios'
import { Col, Row, List, Breadcrumb } from 'antd'
import { ReadOutlined, BulbOutlined, CarryOutOutlined, } from '@ant-design/icons'
import {marked} from 'marked'
import highlight from 'highlight.js'

import Header from '../components/header.js'
import Author from '../components/author.js'
import Advert from '../components/advert'
import Footer from '../components/footer'
import servicePath from '../config/apiUrl.js'
//文章的列表
 export default function  Myist({data,id}){
  const [mylist, setMylist] = useState(data)
  const [load, setLoad] = useState(true)
  useEffect(() => {
    setMylist(data)
  },[data])
   setTimeout(() => {
    setLoad(false)
   }, 1000);
  //  //console.log('data=============>',data)
    marked.setOptions({
        renderer: new marked.Renderer(),
        highlight: function (code) {
            return highlight.highlightAuto(code).value;
          }
        ,
        langPrefix: 'hljs language-', // highlight.js css expects a top-level 'hljs' class.
        pedantic: false, //语法容错
        gfm: true,
        breaks: false,
        sanitize: false,//不忽略html标签
        smartLists: true,
        smartypants: false,
        tables:true,
        xhtml: false
      });
    for (let item of data) {
        try {
          item.content = marked.parse(item.content)
        } catch (error) {
          //console.log(error);
        }
    }
    const arr= ['学习记录','踩坑','工具']
    return (
        <div className='rainbow'>
            <Head>
                <title>blog</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Header  />

            <Row className='comm-main' justify='center'>
                <Col className='comm-left' xs={24} sm={24} md={16} lg={18} xl={12}>
                <div className="bread-div">
                <Breadcrumb>
                  <Breadcrumb.Item>
                  <Link href="/" ><a >首页</a></Link>
                  </Breadcrumb.Item>
             
                 < Breadcrumb.Item><Link  href={`/list?id=${id}`}>
                 <a> {arr.find((item,index) => {
                   if(parseInt(id)==index+1){
                    return item
                   }
                 })}</a></Link></Breadcrumb.Item>
                
                 
                  
                </Breadcrumb>
              </div>
                    <List
                        bordered="true"
                        dataSource={mylist}
                        header={`共计${mylist.length}篇文章`}
                        split="true"
                        itemLayout='vertical'
                        loading={load}
                        renderItem={item => {
                            return (
                                <List.Item>
                                    <div className='list-icon'>
                                        <span><CarryOutOutlined />{item.addtime1}</span>
                                        <span><BulbOutlined />{item.type_name}</span>
                                        <span><ReadOutlined />{item.read}</span>
                                    </div>
                                    <div className='list-title'>
                                   <Link href={{pathname:'/detail/[id]',query:{id:item.id}}}>
                                       <a>{item.title}</a>
                                       </Link> 
                                    </div>
                                    <div className='list-context' dangerouslySetInnerHTML={{__html:item.content}}></div>


                                </List.Item>
                            )
                        }
                        }
                    >

                    </List>
                </Col>

                <Col className='comm-right' xs={0} sm={0} md={7} lg={5} xl={4}>
                    < Author />
                    {/* <Advert /> */}
                </Col>
            </Row>
            <Footer />


        </div>
    )
}
export async function getServerSideProps(context) {
    let id = context.query.id
    console.log('id=============>',id)
    //id是type的id
    const promise = await  axios(servicePath.getArticleListById+'/'+id)
    let data = promise.data.data
    // 通过返回 { props: { posts } } 对象，Blog 组件
    // 在构建时将接收到 `posts` 参数
    return {
      props: {data,id}
    }
  }